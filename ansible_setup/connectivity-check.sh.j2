#!/bin/bash

# Specify your network connection name
CONNECTION_NAME="{{ network.ssid }}"
CONNECTION_PASS="{{ network.password }}"

if [[ $(nmcli -t -f NAME con show --active) == *"$CONNECTION_NAME"* ]]; then
    # skip all if already connected.
    echo "Already connected to WiFi Network"

else 
    # Try to connect to the specific network. This will also fail if the 
    # interface is already disabled for hostapd activate.
    nmcli dev wifi connect "$CONNECTION_NAME" password "$CONNECTION_PASS"

    # Wait for connection to establish
    sleep 10

    # Check if the specific network is active
    if [[ $(nmcli -t -f NAME con show --active) == *"$CONNECTION_NAME"* ]]; then
        echo "Connected to WiFi Network"
        # # If WiFi is connected, ensure hostapd is not running
        # if systemctl is-active --quiet hostapd; then
        #     systemctl stop hostapd
        # fi
        # # Let NetworkManager manage wlan0 again if connected to WiFi
        # nmcli dev set wlan0 managed yes
    else
        echo "WiFi Network is not available. Starting hostapd"
        # If WiFi is not connected, ensure hostapd is running
        # Release control of wlan0 from NetworkManager
        nmcli dev set wlan0 managed no
        ifdown wlan0
        ifup wlan0
        systemctl stop hostapd
        /usr/sbin/hostapd /etc/hostapd/hostapd.conf
        # if ! systemctl is-active --quiet hostapd; then
        #     systemctl start hostapd
        # fi
    fi

fi